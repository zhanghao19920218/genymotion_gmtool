Metadata-Version: 2.1
Name: geny-gmtool
Version: 0.0.5
Summary: Gmtool use python to get
Author-email: Barry Allen <2420615378@qq.com>
License: Copyright (c) 2022 zhanghao19920218
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
Project-URL: Homepage, https://github.com/zhanghao19920218/genymotion_gmtool
Project-URL: Bug Tracker, https://github.com/zhanghao19920218/genymotion_gmtool/issues
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.7
Description-Content-Type: text/markdown
License-File: LICENSE

# Genymotion Gmtool for Python

> Usage: `free version`
>
> 1. get devices from genymotion
> 2. start devices from genymotion
> 3. stop device from genymotion

## Usage

> Get devices from genymotion
>
> 1. Status contains three (running, off, all)

```python
def get_list_devices_running(status: GenyStatus = GenyStatus.ALL) -> List[GenymotionDeviceModel]
```

> Start device from genymotion
>
> Param:`device_name`:  the name of device

```python
def start_device_name(device_name: str) -> int
"""
:param device_name: the device name , must confirm if it's online
:return return 0 means start successfully, -1 means not
"""
```

> Stop device from genymotion
>
> Param: `device_name`

```python
def stop_device_name(device_name: str) -> int
"""
:param device_name: the device name , must confirm if it's online
:return return 0 means stop successfully, -1 means not
"""
```

